version: "3"

services:
  miniPostgresCont:
    container_name: miniPostgresCont
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      PGDATA: /data/postgres
    volumes:
       - ./postgres:/data/postgres
    networks:
      - testNet
  message-api:
    image: server/message-api:latest
    restart: unless-stopped
    networks:
      - testNet
    ports:
      - "5555:5555"
    depends_on:
      - miniPostgresCont
      - broker
    environment:
      PG_CONN: postgres://${PG_USER}:${PG_PASSWORD}@miniPostgresCont:5432/minidb?sslmode=disable   
      HTTP_ADDR: :5555
      KAFKA_BROKER: ${KAFKA_BROKER}
      KAFKA_TOPIC: ${KAFKA_TOPIC}
      KAFKA_GROUP_ID: ${KAFKA_GROUP_ID}
      BUFFER_SIZE: ${BUFFER_SIZE}
  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.0
    container_name: zookeeper
    networks:
      - testNet
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    image: confluentinc/cp-kafka:7.7.0
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - testNet
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      TOPIC_AUTO_CREATE: 1
     
networks:
  testNet:
    driver: bridge